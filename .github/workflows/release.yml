name: Release

on:
  push:
    tags:
    - 'v*'

jobs:
  license-check:
    runs-on: ubuntu-latest
    name: check-license
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 'lts/*'
        cache: 'npm'
        cache-dependency-path: package-lock.json
    - run: npm install
    - run: |
        git submodule update --init tools/autd3-license-check
        cd tools/license-checker
        cargo run

  release:
    needs: [license-check]
    name: create-github-release
    runs-on: ubuntu-latest
    steps:
    - id: create_release
      uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        draft: false
        prerelease: false
    - run: |
        echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
        echo "${{ steps.create_release.outputs.id }}" > release_id.txt
    - uses: actions/upload-artifact@v4
      with:
        name: release_url
        path: release_url.txt
    - uses: actions/upload-artifact@v4
      with:
        name: release_id
        path: release_id.txt
 
  publish-server:
    name: publish-server-${{ matrix.os }}
    needs: [release]
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-build
        with:
          os: ${{ matrix.os }}
      - if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev librsvg2-dev
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - run: python3 build.py build --simulator --soem --twincat
      - uses: actions/download-artifact@v4
        with:
          name: release_id
      - id: get_release_info
        uses: juliangruber/read-file-action@v1
        with:
          path: release_id.txt
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ steps.get_release_info.outputs.content }}
          projectPath: '.'
          releaseDraft: true
          prerelease: false
